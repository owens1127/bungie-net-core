/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.15.1
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the bungie-api-typedef code generator program,
 * adapted from <@link https://github.com/DestinyItemManager/bungie-api-ts>
 * Repository: <@link https://github.com/owensimpson/bungie-api-typedef>
 * Do not edit these files manually.
 */
import { HttpClient } from '../../http';
import { BungieMembershipType } from '../../schemas/BungieMembershipType';
import { BungieRewardDisplay } from '../../schemas/Tokens/BungieRewardDisplay';
import { PartnerOfferClaimRequest } from '../../schemas/Tokens/PartnerOfferClaimRequest';
import { PartnerOfferSkuHistoryResponse } from '../../schemas/Tokens/PartnerOfferSkuHistoryResponse';
import { ServerResponse } from '../../generics/ServerResponse';
/**
 * Claim a partner offer as the authenticated user.
 * @see {@link https://bungie-net.github.io/#Tokens.ClaimPartnerOffer}
 */
export declare function claimPartnerOffer(
  http: HttpClient,
  body: PartnerOfferClaimRequest
): Promise<ServerResponse<boolean>>;
/**
 * @see {@link https://bungie-net.github.io/#Tokens.ApplyMissingPartnerOffersWithoutClaim}
 */
export declare type ApplyMissingPartnerOffersWithoutClaimParams = {
  /** The partner application identifier. */
  partnerApplicationId: number;
  /**
   * The bungie.net user to apply missing offers to. If not self, elevated
   * permissions are required.
   */
  targetBnetMembershipId: string;
};
/**
 * Apply a partner offer to the targeted user. This endpoint does not claim a new
 * offer, but any already claimed offers will be applied to the game if not already.
 * @see {@link https://bungie-net.github.io/#Tokens.ApplyMissingPartnerOffersWithoutClaim}
 */
export declare function applyMissingPartnerOffersWithoutClaim(
  http: HttpClient,
  params: ApplyMissingPartnerOffersWithoutClaimParams
): Promise<ServerResponse<boolean>>;
/**
 * @see {@link https://bungie-net.github.io/#Tokens.GetPartnerOfferSkuHistory}
 */
export declare type GetPartnerOfferSkuHistoryParams = {
  /** The partner application identifier. */
  partnerApplicationId: number;
  /**
   * The bungie.net user to apply missing offers to. If not self, elevated
   * permissions are required.
   */
  targetBnetMembershipId: string;
};
/**
 * Returns the partner sku and offer history of the targeted user. Elevated
 * permissions are required to see users that are not yourself.
 * @see {@link https://bungie-net.github.io/#Tokens.GetPartnerOfferSkuHistory}
 */
export declare function getPartnerOfferSkuHistory(
  http: HttpClient,
  params: GetPartnerOfferSkuHistoryParams
): Promise<ServerResponse<PartnerOfferSkuHistoryResponse[]>>;
/**
 * @see {@link https://bungie-net.github.io/#Tokens.GetBungieRewardsForUser}
 */
export declare type GetBungieRewardsForUserParams = {
  /**
   * bungie.net user membershipId for requested user rewards. If not self, elevated
   * permissions are required.
   */
  membershipId: string;
};
/**
 * Returns the bungie rewards for the targeted user.
 * @see {@link https://bungie-net.github.io/#Tokens.GetBungieRewardsForUser}
 */
export declare function getBungieRewardsForUser(
  http: HttpClient,
  params: GetBungieRewardsForUserParams
): Promise<
  ServerResponse<{
    [key: string]: BungieRewardDisplay;
  }>
>;
/**
 * @see {@link https://bungie-net.github.io/#Tokens.GetBungieRewardsForPlatformUser}
 */
export declare type GetBungieRewardsForPlatformUserParams = {
  /**
   * users platform membershipId for requested user rewards. If not self, elevated
   * permissions are required.
   */
  membershipId: string;
  /** The target Destiny 2 membership type. */
  membershipType: BungieMembershipType;
};
/**
 * Returns the bungie rewards for the targeted user when a platform membership Id
 * and Type are used.
 * @see {@link https://bungie-net.github.io/#Tokens.GetBungieRewardsForPlatformUser}
 */
export declare function getBungieRewardsForPlatformUser(
  http: HttpClient,
  params: GetBungieRewardsForPlatformUserParams
): Promise<
  ServerResponse<{
    [key: string]: BungieRewardDisplay;
  }>
>;
/**
 * Returns a list of the current bungie rewards
 * @see {@link https://bungie-net.github.io/#Tokens.GetBungieRewardsList}
 */
export declare function getBungieRewardsList(http: HttpClient): Promise<
  ServerResponse<{
    [key: string]: BungieRewardDisplay;
  }>
>;
