/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.15.1
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the bungie-api-typedef code generator program,
 * adapted from <@link https://github.com/DestinyItemManager/bungie-api-ts>
 * Repository: <@link https://github.com/owensimpson/bungie-api-typedef>
 * Do not edit these files manually.
 */
import { HttpClient } from '../../http';
import { ForumPostSortEnum } from '../../schemas/Forum/ForumPostSortEnum';
import { ForumRecruitmentDetail } from '../../schemas/Forum/ForumRecruitmentDetail';
import { ForumTopicsCategoryFiltersEnum } from '../../schemas/Forum/ForumTopicsCategoryFiltersEnum';
import { ForumTopicsQuickDateEnum } from '../../schemas/Forum/ForumTopicsQuickDateEnum';
import { ForumTopicsSortEnum } from '../../schemas/Forum/ForumTopicsSortEnum';
import { PostSearchResponse } from '../../schemas/Forum/PostSearchResponse';
import { ServerResponse } from '../../generics/ServerResponse';
import { TagResponse } from '../../schemas/Tags/Models/Contracts/TagResponse';
/**
 * @see {@link https://bungie-net.github.io/#Forum.GetTopicsPaged}
 */
export declare type GetTopicsPagedParams = {
  /** A category filter */
  categoryFilter: ForumTopicsCategoryFiltersEnum;
  /** The group, if any. */
  group: string;
  /**
   * Comma seperated list of locales posts must match to return in the result list.
   * Default 'en'
   */
  locales?: string;
  /** Zero paged page number */
  page: number;
  /** Unused */
  pageSize: number;
  /** A date filter. */
  quickDate: ForumTopicsQuickDateEnum;
  /** The sort mode. */
  sort: ForumTopicsSortEnum;
  /** The tags to search, if any. */
  tagstring?: string;
};
/**
 * Get topics from any forum.
 * @see {@link https://bungie-net.github.io/#Forum.GetTopicsPaged}
 */
export declare function getTopicsPaged(
  http: HttpClient,
  params: GetTopicsPagedParams
): Promise<ServerResponse<PostSearchResponse>>;
/**
 * @see {@link https://bungie-net.github.io/#Forum.GetCoreTopicsPaged}
 */
export declare type GetCoreTopicsPagedParams = {
  /** The category filter. */
  categoryFilter: ForumTopicsCategoryFiltersEnum;
  /**
   * Comma seperated list of locales posts must match to return in the result list.
   * Default 'en'
   */
  locales?: string;
  /** Zero base page */
  page: number;
  /** The date filter. */
  quickDate: ForumTopicsQuickDateEnum;
  /** The sort mode. */
  sort: ForumTopicsSortEnum;
};
/**
 * Gets a listing of all topics marked as part of the core group.
 * @see {@link https://bungie-net.github.io/#Forum.GetCoreTopicsPaged}
 */
export declare function getCoreTopicsPaged(
  http: HttpClient,
  params: GetCoreTopicsPagedParams
): Promise<ServerResponse<PostSearchResponse>>;
/**
 * @see {@link https://bungie-net.github.io/#Forum.GetPostsThreadedPaged}
 */
export declare type GetPostsThreadedPagedParams = {
  getParentPost: boolean;
  page: number;
  pageSize: number;
  parentPostId: string;
  replySize: number;
  rootThreadMode: boolean;
  /** If this value is not null or empty, banned posts are requested to be returned */
  showbanned?: string;
  sortMode: ForumPostSortEnum;
};
/**
 * Returns a thread of posts at the given parent, optionally returning replies to
 * those posts as well as the original parent.
 * @see {@link https://bungie-net.github.io/#Forum.GetPostsThreadedPaged}
 */
export declare function getPostsThreadedPaged(
  http: HttpClient,
  params: GetPostsThreadedPagedParams
): Promise<ServerResponse<PostSearchResponse>>;
/**
 * @see {@link https://bungie-net.github.io/#Forum.GetPostsThreadedPagedFromChild}
 */
export declare type GetPostsThreadedPagedFromChildParams = {
  childPostId: string;
  page: number;
  pageSize: number;
  replySize: number;
  rootThreadMode: boolean;
  /** If this value is not null or empty, banned posts are requested to be returned */
  showbanned?: string;
  sortMode: ForumPostSortEnum;
};
/**
 * Returns a thread of posts starting at the topicId of the input childPostId,
 * optionally returning replies to those posts as well as the original parent.
 * @see {@link https://bungie-net.github.io/#Forum.GetPostsThreadedPagedFromChild}
 */
export declare function getPostsThreadedPagedFromChild(
  http: HttpClient,
  params: GetPostsThreadedPagedFromChildParams
): Promise<ServerResponse<PostSearchResponse>>;
/**
 * @see {@link https://bungie-net.github.io/#Forum.GetPostAndParent}
 */
export declare type GetPostAndParentParams = {
  childPostId: string;
  /** If this value is not null or empty, banned posts are requested to be returned */
  showbanned?: string;
};
/**
 * Returns the post specified and its immediate parent.
 * @see {@link https://bungie-net.github.io/#Forum.GetPostAndParent}
 */
export declare function getPostAndParent(
  http: HttpClient,
  params: GetPostAndParentParams
): Promise<ServerResponse<PostSearchResponse>>;
/**
 * @see {@link https://bungie-net.github.io/#Forum.GetPostAndParentAwaitingApproval}
 */
export declare type GetPostAndParentAwaitingApprovalParams = {
  childPostId: string;
  /** If this value is not null or empty, banned posts are requested to be returned */
  showbanned?: string;
};
/**
 * Returns the post specified and its immediate parent of posts that are awaiting
 * approval.
 * @see {@link https://bungie-net.github.io/#Forum.GetPostAndParentAwaitingApproval}
 */
export declare function getPostAndParentAwaitingApproval(
  http: HttpClient,
  params: GetPostAndParentAwaitingApprovalParams
): Promise<ServerResponse<PostSearchResponse>>;
/**
 * @see {@link https://bungie-net.github.io/#Forum.GetTopicForContent}
 */
export declare type GetTopicForContentParams = {
  contentId: string;
};
/**
 * Gets the post Id for the given content item's comments, if it exists.
 * @see {@link https://bungie-net.github.io/#Forum.GetTopicForContent}
 */
export declare function getTopicForContent(
  http: HttpClient,
  params: GetTopicForContentParams
): Promise<ServerResponse<string>>;
/**
 * @see {@link https://bungie-net.github.io/#Forum.GetForumTagSuggestions}
 */
export declare type GetForumTagSuggestionsParams = {
  /** The partial tag input to generate suggestions from. */
  partialtag?: string;
};
/**
 * Gets tag suggestions based on partial text entry, matching them with other tags
 * previously used in the forums.
 * @see {@link https://bungie-net.github.io/#Forum.GetForumTagSuggestions}
 */
export declare function getForumTagSuggestions(
  http: HttpClient,
  params: GetForumTagSuggestionsParams
): Promise<ServerResponse<TagResponse[]>>;
/**
 * @see {@link https://bungie-net.github.io/#Forum.GetPoll}
 */
export declare type GetPollParams = {
  /** The post id of the topic that has the poll. */
  topicId: string;
};
/**
 * Gets the specified forum poll.
 * @see {@link https://bungie-net.github.io/#Forum.GetPoll}
 */
export declare function getPoll(
  http: HttpClient,
  params: GetPollParams
): Promise<ServerResponse<PostSearchResponse>>;
/**
 * Allows the caller to get a list of to 25 recruitment thread summary information
 * objects.
 * @see {@link https://bungie-net.github.io/#Forum.GetRecruitmentThreadSummaries}
 */
export declare function getRecruitmentThreadSummaries(
  http: HttpClient,
  body: string[]
): Promise<ServerResponse<ForumRecruitmentDetail[]>>;
