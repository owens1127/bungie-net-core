/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.16.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the bungie-api-typedef code generator program,
 * adapted from {@link https://github.com/DestinyItemManager/bungie-api-ts}
 * Repository: {@link https://github.com/owensimpson/oodestiny}
 * Do not edit these files manually.
 */
//

const { rateLimitedRequest } = require('../../rate-limiter.js');
/**
 * @typedef GetVendorsParams
 * @property {string} characterId The Destiny Character ID of the character for whom we're getting vendor info.
 * @property {DestinyComponentType[]} components A comma separated list of components to return (as strings or numeric values). See the DestinyComponentType enum for valid components to request. You must request at least one component to receive results.
 * @property {string} destinyMembershipId Destiny membership ID of another user. You may be denied.
 * @property {DestinyVendorFilter?} filter The filter of what vendors and items to return, if any.
 * @property {BungieMembershipType} membershipType A valid non-BungieNet membership type.
 * @see {@link https://bungie-net.github.io/#Destiny2.GetVendors}
*/

/**
 * Get currently available vendors from the list of vendors that can possibly have
 * rotating inventory. Note that this does not include things like preview vendors
 * and vendors-as-kiosks, neither of whom have rotating/dynamic inventories. Use
 * their definitions as-is for those.
 * @param {GetVendorsParams} params
 * @returns Promise<BungieNetResponse<DestinyVendorsResponse>>
 * @this import(../../index).Client
 * @see {@link https://bungie-net.github.io/#Destiny2.GetVendors}
*/
module.exports = async function getVendors(params) {
  return rateLimitedRequest(this.access_token, {
    method: 'GET',
    url: `https://www.bungie.net/Platform/Destiny2/${params.membershipType}/Profile/${params.destinyMembershipId}/Character/${params.characterId}/Vendors/`,
    params: {
      components: params.components ? params.components.join(',') : undefined,
      filter: params.filter
    }
  });
}
