/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.16.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the bungie-api-typedef code generator program,
 * adapted from {@link https://github.com/DestinyItemManager/bungie-api-ts}
 * Repository: {@link https://github.com/owensimpson/oodestiny}
 * Do not edit these files manually.
 */
//

const { rateLimitedRequest } = require('../../rate-limiter.js');
/**
 * @typedef GetHistoricalStatsParams
 * @property {string} characterId The id of the character to retrieve. You can omit this character ID or set it to 0 to get aggregate stats across all characters.
 * @property {string?} dayend Last day to return when daily stats are requested. Use the format YYYY-MM-DD. Currently, we cannot allow more than 31 days of daily data to be requested in a single request.
 * @property {string?} daystart First day to return when daily stats are requested. Use the format YYYY-MM-DD. Currently, we cannot allow more than 31 days of daily data to be requested in a single request.
 * @property {string} destinyMembershipId The Destiny membershipId of the user to retrieve.
 * @property {DestinyStatsGroupType[]?} groups Group of stats to include, otherwise only general stats are returned. Comma separated list is allowed. Values: General, Weapons, Medals
 * @property {BungieMembershipType} membershipType A valid non-BungieNet membership type.
 * @property {DestinyActivityModeType[]?} modes Game modes to return. See the documentation for DestinyActivityModeType for valid values, and pass in string representation, comma delimited.
 * @property {PeriodType?} periodType Indicates a specific period type to return. Optional. May be: Daily, AllTime, or Activity
 * @see {@link https://bungie-net.github.io/#Destiny2.GetHistoricalStats}
*/

/**
 * Gets historical stats for indicated character.
 * @param {GetHistoricalStatsParams} params
 * @returns Promise<BungieNetResponse<DestinyHistoricalStatsResults>>
 * @this import(../../index).Client
 * @see {@link https://bungie-net.github.io/#Destiny2.GetHistoricalStats}
*/
module.exports = async function getHistoricalStats(params) {
  return rateLimitedRequest(this.access_token, {
    method: 'GET',
    url: `https://www.bungie.net/Platform/Destiny2/${params.membershipType}/Account/${params.destinyMembershipId}/Character/${params.characterId}/Stats/`,
    params: {
      dayend: params.dayend,
      daystart: params.daystart,
      groups: params.groups ? params.groups.join(',') : undefined,
      modes: params.modes ? params.modes.join(',') : undefined,
      periodType: params.periodType
    }
  });
}
