/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.16.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the bungie-api-typedef code generator program,
 * adapted from {@link https://github.com/DestinyItemManager/bungie-api-ts}
 * Repository: {@link https://github.com/owensimpson/oodestiny}
 * Do not edit these files manually.
 */
//

const { rateLimitedRequest } = require('../../rate-limiter.js');
/**
 * @typedef GetAvailableClanFireteamsParams
 * @property {number} activityType The activity type to filter by.
 * @property {FireteamDateRange} dateRange The date range to grab available fireteams.
 * @property {string} groupId The group id of the clan.
 * @property {string?} langFilter An optional language filter.
 * @property {number} page Zero based page
 * @property {FireteamPlatform} platform The platform filter.
 * @property {FireteamPublicSearchOption} publicOnly Determines public/private filtering.
 * @property {FireteamSlotSearch} slotFilter Filters based on available slots
 * @see {@link https://bungie-net.github.io/#Fireteam.GetAvailableClanFireteams}
*/

/**
 * Gets a listing of all of this clan's fireteams that are have available slots.
 * Caller is not checked for join criteria so caching is maximized.
 * @param {GetAvailableClanFireteamsParams} params
 * @returns Promise<BungieNetResponse<SearchResultOfFireteamSummary>>
 * @this import(../../index).Client
 * @see {@link https://bungie-net.github.io/#Fireteam.GetAvailableClanFireteams}
*/
module.exports = async function getAvailableClanFireteams(params) {
  return rateLimitedRequest(this.access_token, {
    method: 'GET',
    url: `https://www.bungie.net/Platform/Fireteam/Clan/${params.groupId}/Available/${params.platform}/${params.activityType}/${params.dateRange}/${params.slotFilter}/${params.publicOnly}/${params.page}/`,
    params: {
      langFilter: params.langFilter
    }
  });
}
