"use strict";
/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.18.0
 * Contact: support@bungie.com
 *
 * OODestiny Version: 2.0.3
 * NOTE: This class is auto generated by the oodestiny code generator program
 * Repository: {@link https://github.com/owensimpson/oodestiny}
 * Adapted from {@link https://github.com/DestinyItemManager/bungie-api-ts}
 * Do not edit these files manually.
 */
//
Object.defineProperty(exports, "__esModule", { value: true });
exports.DestinyUnlockValueUIStyle = void 0;
/**
 * If you're showing an unlock value in the UI, this is the format in which it
 * should be shown. You'll have to build your own algorithms on the client side to
 * determine how best to render these options.
 * @see {@link https://bungie-net.github.io/#/components/schemas/Destiny.DestinyUnlockValueUIStyle}
*/
var DestinyUnlockValueUIStyle;
(function (DestinyUnlockValueUIStyle) {
    /** Generally, Automatic means "Just show the number" */
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["Automatic"] = 0] = "Automatic";
    /**
     * Show the number as a fractional value. For this to make sense, the value being
     * displayed should have a comparable upper bound, like the progress to the next
     * level of a Progression.
    */
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["Fraction"] = 1] = "Fraction";
    /**
     * Show the number as a checkbox. 0 Will mean unchecked, any other value will mean
     * checked.
    */
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["Checkbox"] = 2] = "Checkbox";
    /**
     * Show the number as a percentage. For this to make sense, the value being
     * displayed should have a comparable upper bound, like the progress to the next
     * level of a Progression.
    */
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["Percentage"] = 3] = "Percentage";
    /**
     * Show the number as a date and time. The number will be the number of seconds
     * since the Unix Epoch (January 1st, 1970 at midnight UTC). It'll be up to you to
     * convert this into a date and time format understandable to the user in their
     * time zone.
    */
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["DateTime"] = 4] = "DateTime";
    /**
     * Show the number as a floating point value that represents a fraction, where 0 is
     * min and 1 is max. For this to make sense, the value being displayed should have
     * a comparable upper bound, like the progress to the next level of a Progression.
    */
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["FractionFloat"] = 5] = "FractionFloat";
    /** Show the number as a straight-up integer. */
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["Integer"] = 6] = "Integer";
    /** Show the number as a time duration. The value will be returned as seconds. */
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["TimeDuration"] = 7] = "TimeDuration";
    /**
     * Don't bother showing the value at all, it's not easily human-interpretable, and
     * used for some internal purpose.
    */
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["Hidden"] = 8] = "Hidden";
    /** Example: "1.5x" */
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["Multiplier"] = 9] = "Multiplier";
    /**
     * Show the value as a series of green pips, like the wins in a Trials of Osiris
     * score card.
    */
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["GreenPips"] = 10] = "GreenPips";
    /**
     * Show the value as a series of red pips, like the losses in a Trials of Osiris
     * score card.
    */
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["RedPips"] = 11] = "RedPips";
    /**
     * Show the value as a percentage. For example: "51%" - Does no division, only
     * appends '%'
    */
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["ExplicitPercentage"] = 12] = "ExplicitPercentage";
    /**
     * Show the value as a floating-point number. For example: "4.52" NOTE: Passed
     * along from Investment as whole number with last two digits as decimal values (
     * 452 -> 4.52)
    */
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["RawFloat"] = 13] = "RawFloat";
    /** Show the value as a level and a reward. */
    DestinyUnlockValueUIStyle[DestinyUnlockValueUIStyle["LevelAndReward"] = 14] = "LevelAndReward";
})(DestinyUnlockValueUIStyle = exports.DestinyUnlockValueUIStyle || (exports.DestinyUnlockValueUIStyle = {}));
