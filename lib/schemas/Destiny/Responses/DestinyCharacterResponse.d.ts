/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.16.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the bungie-api-typedef code generator program,
 * adapted from {@link https://github.com/DestinyItemManager/bungie-api-ts}
 * Repository: {@link https://github.com/owensimpson/oodestiny}
 * Do not edit these files manually.
 */
import { SingleComponentResponseOfDestinyInventoryComponent } from '../../SingleComponentResponseOfDestinyInventoryComponent';
import { SingleComponentResponseOfDestinyCharacterComponent } from '../../SingleComponentResponseOfDestinyCharacterComponent';
import { SingleComponentResponseOfDestinyCharacterProgressionComponent } from '../../SingleComponentResponseOfDestinyCharacterProgressionComponent';
import { SingleComponentResponseOfDestinyCharacterRenderComponent } from '../../SingleComponentResponseOfDestinyCharacterRenderComponent';
import { SingleComponentResponseOfDestinyCharacterActivitiesComponent } from '../../SingleComponentResponseOfDestinyCharacterActivitiesComponent';
import { SingleComponentResponseOfDestinyKiosksComponent } from '../../SingleComponentResponseOfDestinyKiosksComponent';
import { SingleComponentResponseOfDestinyPlugSetsComponent } from '../../SingleComponentResponseOfDestinyPlugSetsComponent';
import { SingleComponentResponseOfDestinyPresentationNodesComponent } from '../../SingleComponentResponseOfDestinyPresentationNodesComponent';
import { SingleComponentResponseOfDestinyCharacterRecordsComponent } from '../../SingleComponentResponseOfDestinyCharacterRecordsComponent';
import { SingleComponentResponseOfDestinyCollectiblesComponent } from '../../SingleComponentResponseOfDestinyCollectiblesComponent';
import { DestinyItemComponentSetOfint64 } from '../../DestinyItemComponentSetOfint64';
import { DestinyBaseItemComponentSetOfuint32 } from '../../DestinyBaseItemComponentSetOfuint32';
import { SingleComponentResponseOfDestinyCurrenciesComponent } from '../../SingleComponentResponseOfDestinyCurrenciesComponent';
/**
 * The response contract for GetDestinyCharacter, with components that can be
 * returned for character and item-level data.
 * @see {@link https://bungie-net.github.io/#/components/schemas/Destiny.Responses.DestinyCharacterResponse}
*/
export interface DestinyCharacterResponse {
    /**
     * The character-level non-equipped inventory items.
     *
     * COMPONENT TYPE: CharacterInventories
    */
    readonly inventory: SingleComponentResponseOfDestinyInventoryComponent;
    /**
     * Base information about the character in question.
     *
     * COMPONENT TYPE: Characters
    */
    readonly character: SingleComponentResponseOfDestinyCharacterComponent;
    /**
     * Character progression data, including Milestones.
     *
     * COMPONENT TYPE: CharacterProgressions
    */
    readonly progressions: SingleComponentResponseOfDestinyCharacterProgressionComponent;
    /**
     * Character rendering data - a minimal set of information about equipment and dyes
     * used for rendering.
     *
     * COMPONENT TYPE: CharacterRenderData
    */
    readonly renderData: SingleComponentResponseOfDestinyCharacterRenderComponent;
    /**
     * Activity data - info about current activities available to the player.
     *
     * COMPONENT TYPE: CharacterActivities
    */
    readonly activities: SingleComponentResponseOfDestinyCharacterActivitiesComponent;
    /**
     * Equipped items on the character.
     *
     * COMPONENT TYPE: CharacterEquipment
    */
    readonly equipment: SingleComponentResponseOfDestinyInventoryComponent;
    /**
     * Items available from Kiosks that are available to this specific character.
     *
     * COMPONENT TYPE: Kiosks
    */
    readonly kiosks: SingleComponentResponseOfDestinyKiosksComponent;
    /**
     * When sockets refer to reusable Plug Sets (see DestinyPlugSetDefinition for more
     * info), this is the set of plugs and their states that are scoped to this
     * character.
     *
     * This comes back with ItemSockets, as it is needed for a complete picture of the
     * sockets on requested items.
     *
     * COMPONENT TYPE: ItemSockets
    */
    readonly plugSets: SingleComponentResponseOfDestinyPlugSetsComponent;
    /** COMPONENT TYPE: PresentationNodes */
    readonly presentationNodes: SingleComponentResponseOfDestinyPresentationNodesComponent;
    /** COMPONENT TYPE: Records */
    readonly records: SingleComponentResponseOfDestinyCharacterRecordsComponent;
    /** COMPONENT TYPE: Collectibles */
    readonly collectibles: SingleComponentResponseOfDestinyCollectiblesComponent;
    /**
     * The set of components belonging to the player's instanced items.
     *
     * COMPONENT TYPE: [See inside the DestinyItemComponentSet contract for component
     * types.]
    */
    readonly itemComponents: DestinyItemComponentSetOfint64;
    /**
     * The set of components belonging to the player's UNinstanced items. Because
     * apparently now those too can have information relevant to the character's state.
     *
     * COMPONENT TYPE: [See inside the DestinyItemComponentSet contract for component
     * types.]
    */
    readonly uninstancedItemComponents: DestinyBaseItemComponentSetOfuint32;
    /**
     * A "lookup" convenience component that can be used to quickly check if the
     * character has access to items that can be used for purchasing.
     *
     * COMPONENT TYPE: CurrencyLookups
    */
    readonly currencyLookups: SingleComponentResponseOfDestinyCurrenciesComponent;
}
