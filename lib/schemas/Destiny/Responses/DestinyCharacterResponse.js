/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.16.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the bungie-api-typedef code generator program,
 * adapted from {@link https://github.com/DestinyItemManager/bungie-api-ts}
 * Repository: {@link https://github.com/owensimpson/oodestiny}
 * Do not edit these files manually.
 */
//

/**
 * The response contract for GetDestinyCharacter, with components that can be
 * returned for character and item-level data.
 * @type {typeof DestinyCharacterResponse}
 * @see {@link https://bungie-net.github.io/#/components/schemas/Destiny.Responses.DestinyCharacterResponse}
*/
module.exports = class DestinyCharacterResponse {
  /**
   * The character-level non-equipped inventory items.
   *
   * COMPONENT TYPE: CharacterInventories
   * @readonly
   * @type SingleComponentResponseOfDestinyInventoryComponent
  */
  inventory;
  /**
   * Base information about the character in question.
   *
   * COMPONENT TYPE: Characters
   * @readonly
   * @type SingleComponentResponseOfDestinyCharacterComponent
  */
  character;
  /**
   * Character progression data, including Milestones.
   *
   * COMPONENT TYPE: CharacterProgressions
   * @readonly
   * @type SingleComponentResponseOfDestinyCharacterProgressionComponent
  */
  progressions;
  /**
   * Character rendering data - a minimal set of information about equipment and dyes
   * used for rendering.
   *
   * COMPONENT TYPE: CharacterRenderData
   * @readonly
   * @type SingleComponentResponseOfDestinyCharacterRenderComponent
  */
  renderData;
  /**
   * Activity data - info about current activities available to the player.
   *
   * COMPONENT TYPE: CharacterActivities
   * @readonly
   * @type SingleComponentResponseOfDestinyCharacterActivitiesComponent
  */
  activities;
  /**
   * Equipped items on the character.
   *
   * COMPONENT TYPE: CharacterEquipment
   * @readonly
   * @type SingleComponentResponseOfDestinyInventoryComponent
  */
  equipment;
  /**
   * Items available from Kiosks that are available to this specific character.
   *
   * COMPONENT TYPE: Kiosks
   * @readonly
   * @type SingleComponentResponseOfDestinyKiosksComponent
  */
  kiosks;
  /**
   * When sockets refer to reusable Plug Sets (see DestinyPlugSetDefinition for more
   * info), this is the set of plugs and their states that are scoped to this
   * character.
   *
   * This comes back with ItemSockets, as it is needed for a complete picture of the
   * sockets on requested items.
   *
   * COMPONENT TYPE: ItemSockets
   * @readonly
   * @type SingleComponentResponseOfDestinyPlugSetsComponent
  */
  plugSets;
  /**
   * COMPONENT TYPE: PresentationNodes
   * @readonly
   * @type SingleComponentResponseOfDestinyPresentationNodesComponent
  */
  presentationNodes;
  /**
   * COMPONENT TYPE: Records
   * @readonly
   * @type SingleComponentResponseOfDestinyCharacterRecordsComponent
  */
  records;
  /**
   * COMPONENT TYPE: Collectibles
   * @readonly
   * @type SingleComponentResponseOfDestinyCollectiblesComponent
  */
  collectibles;
  /**
   * The set of components belonging to the player's instanced items.
   *
   * COMPONENT TYPE: [See inside the DestinyItemComponentSet contract for component
   * types.]
   * @readonly
   * @type DestinyItemComponentSetOfint64
  */
  itemComponents;
  /**
   * The set of components belonging to the player's UNinstanced items. Because
   * apparently now those too can have information relevant to the character's state.
   *
   * COMPONENT TYPE: [See inside the DestinyItemComponentSet contract for component
   * types.]
   * @readonly
   * @type DestinyBaseItemComponentSetOfuint32
  */
  uninstancedItemComponents;
  /**
   * A "lookup" convenience component that can be used to quickly check if the
   * character has access to items that can be used for purchasing.
   *
   * COMPONENT TYPE: CurrencyLookups
   * @readonly
   * @type SingleComponentResponseOfDestinyCurrenciesComponent
  */
  currencyLookups;
}
