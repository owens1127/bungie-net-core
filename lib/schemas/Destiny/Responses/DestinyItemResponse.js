/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.16.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the bungie-api-typedef code generator program,
 * adapted from {@link https://github.com/DestinyItemManager/bungie-api-ts}
 * Repository: {@link https://github.com/owensimpson/oodestiny}
 * Do not edit these files manually.
 */

/**
 * The response object for retrieving an individual instanced item. None of these
 * components are relevant for an item that doesn't have an "itemInstanceId": for
 * those, get your information from the DestinyInventoryDefinition.
 * @type DestinyItemResponse
 * @property {string?} characterId If the item is on a character, this will return the ID of the character that is holding the item.
 * @property {SingleComponentResponseOfDestinyItemComponent} item Common data for the item relevant to its non-instanced properties.
COMPONENT TYPE: ItemCommonData
 * @property {SingleComponentResponseOfDestinyItemInstanceComponent} instance Basic instance data for the item.
COMPONENT TYPE: ItemInstances
 * @property {SingleComponentResponseOfDestinyItemObjectivesComponent} objectives Information specifically about the item's objectives.
COMPONENT TYPE: ItemObjectives
 * @property {SingleComponentResponseOfDestinyItemPerksComponent} perks Information specifically about the perks currently active on the item.
COMPONENT TYPE: ItemPerks
 * @property {SingleComponentResponseOfDestinyItemRenderComponent} renderData Information about how to render the item in 3D.
COMPONENT TYPE: ItemRenderData
 * @property {SingleComponentResponseOfDestinyItemStatsComponent} stats Information about the computed stats of the item: power, defense, etc...
COMPONENT TYPE: ItemStats
 * @property {SingleComponentResponseOfDestinyItemTalentGridComponent} talentGrid Information about the talent grid attached to the item. Talent nodes can provide a variety of benefits and abilities, and in Destiny 2 are used almost exclusively for the character's "Builds".
COMPONENT TYPE: ItemTalentGrids
 * @property {SingleComponentResponseOfDestinyItemSocketsComponent} sockets Information about the sockets of the item: which are currently active, what potential sockets you could have and the stats/abilities/perks you can gain from them.
COMPONENT TYPE: ItemSockets
 * @property {SingleComponentResponseOfDestinyItemReusablePlugsComponent} reusablePlugs Information about the Reusable Plugs for sockets on an item. These are plugs that you can insert into the given socket regardless of if you actually own an instance of that plug: they are logic-driven plugs rather than inventory-driven.
 These may need to be combined with Plug Set component data to get a full picture of available plugs on a given socket.
 COMPONENT TYPE: ItemReusablePlugs
 * @property {SingleComponentResponseOfDestinyItemPlugObjectivesComponent} plugObjectives Information about objectives on Plugs for a given item. See the component's documentation for more info.
COMPONENT TYPE: ItemPlugObjectives
 * @see {@link https://bungie-net.github.io/#/components/schemas/Destiny.Responses.DestinyItemResponse}
*/
class DestinyItemResponse {
  /** @readonly */
  characterId;
  /** @readonly */
  item;
  /** @readonly */
  instance;
  /** @readonly */
  objectives;
  /** @readonly */
  perks;
  /** @readonly */
  renderData;
  /** @readonly */
  stats;
  /** @readonly */
  talentGrid;
  /** @readonly */
  sockets;
  /** @readonly */
  reusablePlugs;
  /** @readonly */
  plugObjectives;
}
module.exports = DestinyItemResponse;
