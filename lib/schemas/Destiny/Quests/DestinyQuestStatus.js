/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.16.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the bungie-api-typedef code generator program,
 * adapted from {@link https://github.com/DestinyItemManager/bungie-api-ts}
 * Repository: {@link https://github.com/owensimpson/oodestiny}
 * Do not edit these files manually.
 */

/**
 * Data regarding the progress of a Quest for a specific character. Quests are
 * composed of multiple steps, each with potentially multiple objectives: this
 * QuestStatus will return Objective data for the *currently active* step in this
 * quest.
 * @type DestinyQuestStatus
 * @property {number} questHash The hash identifier for the Quest Item. (Note: Quests are defined as Items, and thus you would use this to look up the quest's DestinyInventoryItemDefinition). For information on all steps in the quest, you can then examine its DestinyInventoryItemDefinition.setData property for Quest Steps (which are *also* items). You can use the Item Definition to display human readable data about the overall quest. Mapped to DestinyInventoryItemDefinition in the manifest.
 * @property {number} stepHash The hash identifier of the current Quest Step, which is also a DestinyInventoryItemDefinition. You can use this to get human readable data about the current step and what to do in that step. Mapped to DestinyInventoryItemDefinition in the manifest.
 * @property {DestinyObjectiveProgress[]} stepObjectives A step can have multiple objectives. This will give you the progress for each objective in the current step, in the order in which they are rendered in-game.
 * @property {boolean} tracked Whether or not the quest is tracked
 * @property {string} itemInstanceId The current Quest Step will be an instanced item in the player's inventory. If you care about that, this is the instance ID of that item.
 * @property {boolean} completed Whether or not the whole quest has been completed, regardless of whether or not you have redeemed the rewards for the quest.
 * @property {boolean} redeemed Whether or not you have redeemed rewards for this quest.
 * @property {boolean} started Whether or not you have started this quest.
 * @property {number?} vendorHash If the quest has a related Vendor that you should talk to in order to initiate the quest/earn rewards/continue the quest, this will be the hash identifier of that Vendor. Look it up its DestinyVendorDefinition.
 * @see {@link https://bungie-net.github.io/#/components/schemas/Destiny.Quests.DestinyQuestStatus}
*/
class DestinyQuestStatus {
  /** @readonly */
  questHash;
  /** @readonly */
  stepHash;
  /** @readonly */
  stepObjectives;
  /** @readonly */
  tracked;
  /** @readonly */
  itemInstanceId;
  /** @readonly */
  completed;
  /** @readonly */
  redeemed;
  /** @readonly */
  started;
  /** @readonly */
  vendorHash;
}
module.exports = DestinyQuestStatus;
