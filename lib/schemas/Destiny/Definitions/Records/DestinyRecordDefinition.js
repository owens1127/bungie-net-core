/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.16.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the bungie-api-typedef code generator program,
 * adapted from {@link https://github.com/DestinyItemManager/bungie-api-ts}
 * Repository: {@link https://github.com/owensimpson/oodestiny}
 * Do not edit these files manually.
 */
//

/**
 * @type {typeof DestinyRecordDefinition}
 * @see {@link https://bungie-net.github.io/#/components/schemas/Destiny.Definitions.Records.DestinyRecordDefinition}
*/
module.exports = class DestinyRecordDefinition {
  /**
   * @readonly
   * @type DestinyDisplayPropertiesDefinition
  */
  displayProperties;
  /**
   * Indicates whether this Record's state is determined on a per-character or on an
   * account-wide basis.
   * @readonly
   * @type DestinyScope
  */
  scope;
  /**
   * @readonly
   * @type DestinyPresentationChildBlock
  */
  presentationInfo;
  /**
   * Mapped to DestinyLoreDefinition in the manifest.
   * @readonly
   * @type number?
  */
  loreHash;
  /**
   * Mapped to DestinyObjectiveDefinition in the manifest.
   * @readonly
   * @type number[]
  */
  objectiveHashes;
  /**
   * @readonly
   * @type DestinyRecordValueStyle
  */
  recordValueStyle;
  /**
   * @readonly
   * @type boolean
  */
  forTitleGilding;
  /**
   * A hint to show a large icon for a reward
   * @readonly
   * @type boolean
  */
  shouldShowLargeIcons;
  /**
   * @readonly
   * @type DestinyRecordTitleBlock
  */
  titleInfo;
  /**
   * @readonly
   * @type DestinyRecordCompletionBlock
  */
  completionInfo;
  /**
   * @readonly
   * @type SchemaRecordStateBlock
  */
  stateInfo;
  /**
   * @readonly
   * @type DestinyPresentationNodeRequirementsBlock
  */
  requirements;
  /**
   * @readonly
   * @type DestinyRecordExpirationBlock
  */
  expirationInfo;
  /**
   * Some records have multiple 'interval' objectives, and the record may be claimed
   * at each completed interval
   * @readonly
   * @type DestinyRecordIntervalBlock
  */
  intervalInfo;
  /**
   * If there is any publicly available information about rewards earned for
   * achieving this record, this is the list of those items.
   *
   * However, note that some records intentionally have "hidden" rewards. These will
   * not be returned in this list.
   * @readonly
   * @type DestinyItemQuantity[]
  */
  rewardItems;
  /**
   * @readonly
   * @type DestinyPresentationNodeType
  */
  presentationNodeType;
  /**
   * @readonly
   * @type string[]
  */
  traitIds;
  /**
   * Mapped to DestinyTraitDefinition in the manifest.
   * @readonly
   * @type number[]
  */
  traitHashes;
  /**
   * A quick reference to presentation nodes that have this node as a child.
   * Presentation nodes can be parented under multiple parents. Mapped to
   * DestinyPresentationNodeDefinition in the manifest.
   * @readonly
   * @type number[]
  */
  parentNodeHashes;
  /**
   * The unique identifier for this entity. Guaranteed to be unique for the type of
   * entity, but not globally.
   *
   * When entities refer to each other in Destiny content, it is this hash that they
   * are referring to.
   * @readonly
   * @type number
  */
  hash;
  /**
   * The index of the entity as it was found in the investment tables.
   * @readonly
   * @type number
  */
  index;
  /**
   * If this is true, then there is an entity with this identifier/type combination,
   * but BNet is not yet allowed to show it. Sorry!
   * @readonly
   * @type boolean
  */
  redacted;
}
