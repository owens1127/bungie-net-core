/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.16.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the bungie-api-typedef code generator program,
 * adapted from {@link https://github.com/DestinyItemManager/bungie-api-ts}
 * Repository: {@link https://github.com/owensimpson/oodestiny}
 * Do not edit these files manually.
 */

/**
 * @type DestinyRecordDefinition
 * @property {DestinyDisplayPropertiesDefinition} displayProperties 
 * @property {DestinyScope} scope Indicates whether this Record's state is determined on a per-character or on an account-wide basis.
 * @property {DestinyPresentationChildBlock} presentationInfo 
 * @property {number?} loreHash Mapped to DestinyLoreDefinition in the manifest.
 * @property {number[]} objectiveHashes Mapped to DestinyObjectiveDefinition in the manifest.
 * @property {DestinyRecordValueStyle} recordValueStyle 
 * @property {boolean} forTitleGilding 
 * @property {boolean} shouldShowLargeIcons A hint to show a large icon for a reward
 * @property {DestinyRecordTitleBlock} titleInfo 
 * @property {DestinyRecordCompletionBlock} completionInfo 
 * @property {SchemaRecordStateBlock} stateInfo 
 * @property {DestinyPresentationNodeRequirementsBlock} requirements 
 * @property {DestinyRecordExpirationBlock} expirationInfo 
 * @property {DestinyRecordIntervalBlock} intervalInfo Some records have multiple 'interval' objectives, and the record may be claimed at each completed interval
 * @property {DestinyItemQuantity[]} rewardItems If there is any publicly available information about rewards earned for achieving this record, this is the list of those items.
 However, note that some records intentionally have "hidden" rewards. These will not be returned in this list.
 * @property {DestinyPresentationNodeType} presentationNodeType 
 * @property {string[]} traitIds 
 * @property {number[]} traitHashes Mapped to DestinyTraitDefinition in the manifest.
 * @property {number[]} parentNodeHashes A quick reference to presentation nodes that have this node as a child. Presentation nodes can be parented under multiple parents. Mapped to DestinyPresentationNodeDefinition in the manifest.
 * @property {number} hash The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.
When entities refer to each other in Destiny content, it is this hash that they are referring to.
 * @property {number} index The index of the entity as it was found in the investment tables.
 * @property {boolean} redacted If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!
 * @see {@link https://bungie-net.github.io/#/components/schemas/Destiny.Definitions.Records.DestinyRecordDefinition}
*/
class DestinyRecordDefinition {
  /** @readonly */
  displayProperties;
  /** @readonly */
  scope;
  /** @readonly */
  presentationInfo;
  /** @readonly */
  loreHash;
  /** @readonly */
  objectiveHashes;
  /** @readonly */
  recordValueStyle;
  /** @readonly */
  forTitleGilding;
  /** @readonly */
  shouldShowLargeIcons;
  /** @readonly */
  titleInfo;
  /** @readonly */
  completionInfo;
  /** @readonly */
  stateInfo;
  /** @readonly */
  requirements;
  /** @readonly */
  expirationInfo;
  /** @readonly */
  intervalInfo;
  /** @readonly */
  rewardItems;
  /** @readonly */
  presentationNodeType;
  /** @readonly */
  traitIds;
  /** @readonly */
  traitHashes;
  /** @readonly */
  parentNodeHashes;
  /** @readonly */
  hash;
  /** @readonly */
  index;
  /** @readonly */
  redacted;
}
module.exports = DestinyRecordDefinition;
