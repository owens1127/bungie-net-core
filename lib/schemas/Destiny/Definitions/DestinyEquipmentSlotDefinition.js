/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.16.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the bungie-api-typedef code generator program,
 * adapted from {@link https://github.com/DestinyItemManager/bungie-api-ts}
 * Repository: {@link https://github.com/owensimpson/oodestiny}
 * Do not edit these files manually.
 */
//

/**
 * Characters can not only have Inventory buckets (containers of items that are
 * generally matched by their type or functionality), they can also have Equipment
 * Slots.
 *
 * The Equipment Slot is an indicator that the related bucket can have instanced
 * items equipped on the character. For instance, the Primary Weapon bucket has an
 * Equipment Slot that determines whether you can equip primary weapons, and holds
 * the association between its slot and the inventory bucket from which it can have
 * items equipped.
 *
 * An Equipment Slot must have a related Inventory Bucket, but not all inventory
 * buckets must have Equipment Slots.
 * @type {typeof DestinyEquipmentSlotDefinition}
 * @see {@link https://bungie-net.github.io/#/components/schemas/Destiny.Definitions.DestinyEquipmentSlotDefinition}
*/
module.exports = class DestinyEquipmentSlotDefinition {
  /**
   * @readonly
   * @type DestinyDisplayPropertiesDefinition
  */
  displayProperties;
  /**
   * These technically point to "Equipment Category Definitions". But don't get
   * excited. There's nothing of significant value in those definitions, so I didn't
   * bother to expose them. You can use the hash here to group equipment slots by
   * common functionality, which serves the same purpose as if we had the Equipment
   * Category definitions exposed.
   * @readonly
   * @type number
  */
  equipmentCategoryHash;
  /**
   * The inventory bucket that owns this equipment slot. Mapped to
   * DestinyInventoryBucketDefinition in the manifest.
   * @readonly
   * @type number
  */
  bucketTypeHash;
  /**
   * If True, equipped items should have their custom art dyes applied when rendering
   * the item. Otherwise, custom art dyes on an item should be ignored if the item is
   * equipped in this slot.
   * @readonly
   * @type boolean
  */
  applyCustomArtDyes;
  /**
   * The Art Dye Channels that apply to this equipment slot.
   * @readonly
   * @type DestinyArtDyeReference[]
  */
  artDyeChannels;
  /**
   * The unique identifier for this entity. Guaranteed to be unique for the type of
   * entity, but not globally.
   *
   * When entities refer to each other in Destiny content, it is this hash that they
   * are referring to.
   * @readonly
   * @type number
  */
  hash;
  /**
   * The index of the entity as it was found in the investment tables.
   * @readonly
   * @type number
  */
  index;
  /**
   * If this is true, then there is an entity with this identifier/type combination,
   * but BNet is not yet allowed to show it. Sorry!
   * @readonly
   * @type boolean
  */
  redacted;
}
