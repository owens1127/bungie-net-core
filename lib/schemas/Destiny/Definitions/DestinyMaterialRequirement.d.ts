/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.16.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the bungie-api-typedef code generator program,
 * adapted from {@link https://github.com/DestinyItemManager/bungie-api-ts}
 * Repository: {@link https://github.com/owensimpson/oodestiny}
 * Do not edit these files manually.
 */
/**
 * Many actions relating to items require you to expend materials: - Activating a
 * talent node - Inserting a plug into a socket The items will refer to material
 * requirements by a materialRequirementsHash in these cases, and this is the
 * definition for those requirements in terms of the item required, how much of it
 * is required and other interesting info. This is one of the rare/strange times
 * where a single contract class is used both in definitions *and* in live data
 * response contracts. I'm not sure yet whether I regret that.
 * @see {@link https://bungie-net.github.io/#/components/schemas/Destiny.Definitions.DestinyMaterialRequirement}
*/
export interface DestinyMaterialRequirement {
    /**
     * The hash identifier of the material required. Use it to look up the material's
     * DestinyInventoryItemDefinition. Mapped to DestinyInventoryItemDefinition in the
     * manifest.
    */
    readonly itemHash: number;
    /**
     * If True, the material will be removed from the character's inventory when the
     * action is performed.
    */
    readonly deleteOnAction: boolean;
    /** The amount of the material required. */
    readonly count: number;
    /**
     * If true, the material requirement count value is constant. Since The Witch Queen
     * expansion, some material requirement counts can be dynamic and will need to be
     * returned with an API call.
    */
    readonly countIsConstant: boolean;
    /**
     * If True, this requirement is "silent": don't bother showing it in a material
     * requirements display. I mean, I'm not your mom: I'm not going to tell you you *
     * can't* show it. But we won't show it in our UI.
    */
    readonly omitFromRequirements: boolean;
}
