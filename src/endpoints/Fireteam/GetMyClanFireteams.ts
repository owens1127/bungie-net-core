/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the bungie-net-core code generator program
 * Repository: {@link https://github.com/owensimpson/bungie-net-core}
 * Adapted from {@link https://github.com/DestinyItemManager/bungie-api-ts}
 * Do not edit these files manually.
 */
//

import { FireteamPlatform } from '../../enums/Fireteam/FireteamPlatform';
import { BungieClientProtocol } from '../../client';
import { BungieNetResponse } from '../../interfaces/BungieNetResponse';
import { SearchResultOfFireteamResponse } from '../../models/SearchResultOfFireteamResponse';

/**
 * Gets a listing of all fireteams that caller is an applicant, a member, or an
 * alternate of.
 * @see {@link https://bungie-net.github.io/#Fireteam.GetMyClanFireteams}
 */
export async function getMyClanFireteams(
  params: {
    /**
     * If true, filter by clan. Otherwise, ignore the clan and show all of the user's
     * fireteams.
     */
    groupFilter?: boolean;
    /**
     * The group id of the clan. (This parameter is ignored unless the optional query
     * parameter groupFilter is true).
     */
    groupId: string;
    /** If true, return fireteams that have been closed. */
    includeClosed: boolean;
    /** An optional language filter. */
    langFilter?: string;
    /** Deprecated parameter, ignored. */
    page: number;
    /** The platform filter. */
    platform: FireteamPlatform;
  },
  client: BungieClientProtocol
): Promise<BungieNetResponse<SearchResultOfFireteamResponse>> {
  const url = new URL(
    `https://www.bungie.net/Platform/Fireteam/Clan/${params.groupId}/My/${params.platform}/${params.includeClosed}/${params.page}/`
  );
  params.groupFilter !== undefined &&
    url.searchParams.set('groupFilter', String(params.groupFilter));
  params.langFilter !== undefined &&
    url.searchParams.set('langFilter', String(params.langFilter));
  return client.fetch({ method: 'GET', url });
}
