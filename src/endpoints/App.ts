/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the bungie-net-core code generator program
 * Repository: {@link https://github.com/owens1127/bungie-net-core}
 * Do not edit these files manually.
 */
//

import { BungieHttpProtocol } from './..';
import { BungieNetResponse } from '../interfaces/BungieNetResponse';
import { ApiUsage } from '../models/Applications/ApiUsage';
import { Application } from '../models/Applications/Application';

/**
 * Get API usage by application for time frame specified. You can go as far back as
 * 30 days ago, and can ask for up to a 48 hour window of time in a single request.
 * You must be authenticated with at least the ReadUserData permission to access
 * this endpoint.
 * @see {@link https://bungie-net.github.io/#App.GetApplicationApiUsage}
 */
export async function getApplicationApiUsage(
  http: BungieHttpProtocol,
  params: {
    /** ID of the application to get usage statistics. */
    applicationId: number;
    /** End time for query. Goes to now if not specified. */
    end?: string;
    /** Start time for query. Goes to 24 hours ago if not specified. */
    start?: string;
  }
): Promise<BungieNetResponse<ApiUsage>> {
  const baseUrl = `https://www.bungie.net/Platform/App/ApiUsage/${params.applicationId}/`;
  const searchParams = new URLSearchParams();
  if (params.end !== undefined) searchParams.append('end', params.end.toString());
  if (params.start !== undefined) searchParams.append('start', params.start.toString());
  return await http<BungieNetResponse<ApiUsage>>({ method: 'GET', baseUrl, searchParams, body: undefined });
}

/**
 * Get list of applications created by Bungie.
 * @see {@link https://bungie-net.github.io/#App.GetBungieApplications}
 */
export async function getBungieApplications(http: BungieHttpProtocol): Promise<BungieNetResponse<Application[]>> {
  const baseUrl = `https://www.bungie.net/Platform/App/FirstParty/`;
  const searchParams = undefined;
  return await http<BungieNetResponse<Application[]>>({ method: 'GET', baseUrl, searchParams, body: undefined });
}
