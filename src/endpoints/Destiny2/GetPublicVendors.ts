/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.18.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the bungie-net-core code generator program
 * Repository: {@link https://github.com/owensimpson/bungie-net-core}
 * Adapted from {@link https://github.com/DestinyItemManager/bungie-api-ts}
 * Do not edit these files manually.
 */
//

import { BungieClientProtocol } from '../../client';
import { BungieNetResponse } from '../../interfaces/BungieNetResponse';
import { DestinyComponentType } from '../../models';
import { DestinyPublicVendorsResponse } from '../../models';
/** @see {@link https://bungie-net.github.io/#Destiny2.GetPublicVendors} */
export type GetPublicVendorsParams<T extends DestinyComponentType[]> = {
  /**
   * A comma separated list of components to return (as strings or numeric values).
   * See the DestinyComponentType enum for valid components to request. You must
   * request at least one component to receive results.
   */
  components: [...T];
};

/**
 * Get items available from vendors where the vendors have items for sale that are
 * common for everyone. If any portion of the Vendor's available inventory is
 * character or account specific, we will be unable to return their data from this
 * endpoint due to the way that available inventory is computed. As I am often
 * guilty of saying: 'It's a long story...'
 * @see {@link https://bungie-net.github.io/#Destiny2.GetPublicVendors}
 */
export async function getPublicVendors<T extends DestinyComponentType[]>(
  params: GetPublicVendorsParams<T>,
  client: BungieClientProtocol
): Promise<BungieNetResponse<DestinyPublicVendorsResponse<T>>> {
  return client.fetch<DestinyPublicVendorsResponse<T>>({
    method: 'GET',
    url: 'https://www.bungie.net/Platform/Destiny2/Vendors/',
    params: {
      components: params.components ? params.components.join(',') : undefined
    }
  });
}
